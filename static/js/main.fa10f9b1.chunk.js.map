{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","logo.svg","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monsters","id","name","email","CardList","map","SearchBox","placeholder","handleChange","type","onChange","App","e","setState","searchFiled","target","value","state","fetch","then","response","json","users","this","filteredMonters","filter","monster","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qTAIaA,G,MAAO,SAACC,GAAD,OAChB,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAI,SAASC,IAAG,+BAA0BH,EAAMI,SAASC,GAAzC,4BACrB,mCAAML,EAAMI,SAASE,KAArB,OACA,kCAAKN,EAAMI,SAASG,cCFfC,G,MAAW,SAACR,GACrB,OACA,qBAAKC,UAAU,YAAf,SAEQD,EAAMI,SAASK,KAAI,SAAAL,GAAQ,OAC3B,cAAC,EAAD,CAAyBA,SAAUA,GAAxBA,EAASC,WCPnBK,G,MAAY,SAAC,GAAD,IAAEC,EAAF,EAAEA,YAAaC,EAAf,EAAeA,aAAf,OACrB,uBACAX,UAAU,SACVY,KAAK,SACLF,YAAaA,EACbG,SAAUF,MCsCCG,GC/CA,I,wDDUb,aAAc,IAAD,8BACX,gBAaFH,aAAe,SAAAI,GACb,EAAKC,SAAS,CAACC,YAAcF,EAAEG,OAAOC,SAbpC,EAAKC,MAAQ,CACXjB,SAAS,GACTc,YAAa,IAJN,E,gEAQO,IAAD,OACjBI,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKT,SAAS,CAACb,SAASsB,S,+BAOhC,IAAD,EAC0BC,KAAKN,MAA9BjB,EADD,EACCA,SAAUc,EADX,EACWA,YACXU,EAAkBxB,EAASyB,QAAO,SAAAC,GAAO,OAC7CA,EAAQxB,KAAKyB,cAAcC,SAASd,EAAYa,kBAGlD,OACE,sBAAK9B,UAAU,MAAf,UACE,mDACA,cAAC,EAAD,CACAU,YAAY,iBACZC,aAAce,KAAKf,eAEnB,cAAC,EAAD,CAAUR,SAAUwB,W,GAhCVK,cEGHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.fa10f9b1.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport './card.style.css';\r\n\r\nexport const Card = (props) => (\r\n    <div className='card-container'>\r\n        <img alt=\"moster\" src={`https://robohash.org/${props.monsters.id}?set=set2&size=180x180`} />\r\n        <h2> {props.monsters.name} </h2>\r\n        <p> {props.monsters.email}</p>\r\n    </div>\r\n)","import React from 'react';\r\n \r\nimport { Card } from '../card/card.component';\r\n\r\nimport './card-list.style.css';\r\n\r\nexport const CardList = (props) => {\r\n    return(\r\n    <div className='card-list'>\r\n        {\r\n            props.monsters.map(monsters =>(\r\n            <Card key={monsters.id}  monsters={monsters} />)\r\n        )}\r\n        </div>)\r\n} ","import React from 'react';\r\n\r\nimport './search-box.style.css';\r\n\r\nexport const SearchBox = ({placeholder, handleChange}) =>(\r\n    <input \r\n    className='search'\r\n    type='search' \r\n    placeholder={placeholder} \r\n    onChange={handleChange}/>\r\n)","import React, { Component } from 'react';\n \nimport {CardList} from './components/card-list/card-list.component';\n\nimport {SearchBox} from './components/search-box/search-box.component';\n\nimport logo from './logo.svg';\nimport './App.css';\n\nclass App extends Component{\n  constructor(){\n    super();\n      this.state = {\n        monsters:[],\n        searchFiled: ''\n      }\n  }\n\n  componentDidMount(){\n    fetch('https://jsonplaceholder.typicode.com/users')\n    .then(response => response.json())\n    .then(users => this.setState({monsters:users}))\n  }\n\n  handleChange = e =>{\n    this.setState({searchFiled : e.target.value});\n  };\n\n  render(){\n    const {monsters, searchFiled} = this.state;\n    const filteredMonters = monsters.filter(monster => \n      monster.name.toLowerCase().includes(searchFiled.toLowerCase())\n      );\n\n    return(\n      <div className=\"App\">\n        <h1> Monster Rolodex </h1>\n        <SearchBox \n        placeholder='Search Monster' \n        handleChange={this.handleChange}\n        />\n        <CardList monsters={filteredMonters} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}